---
- name: Rekey hosts
  hosts: overcloud,seed,seed-hypervisor,infra-vms
  gather_facts: false
  vars:
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    rekey_users:
      - stack
      - kolla
    rekey_remove_existing_key: false
  tasks:
    - name: Stat existing private key file
      ansible.builtin.stat:
        path: "{{ ssh_private_key_path }}"
      register: stat_result
      delegate_to: localhost
      run_once: true

    - name: Fail when existing private key does not exist
      ansible.builtin.fail:
        msg: "No existing private key file found. Check ssh_private_key_path and  is set correctly."
      when:
        - not stat_result.stat.exists
      delegate_to: localhost
      run_once: true

    - name: Stat existing public key file
      ansible.builtin.stat:
        path: "{{ ssh_public_key_path }}"
      register: stat_result
      delegate_to: localhost
      run_once: true

    - name: Fail when existing public key does not exist
      ansible.builtin.fail:
        msg: "No existing public key file found. Check ssh_public_key_path and  is set correctly."
      when:
        - not stat_result.stat.exists
      delegate_to: localhost
      run_once: true

    - name: Generate a new SSH key
      community.crypto.openssh_keypair:
        path: "{{ ssh_private_key_path }}_new"
        type: "{{ ssh_key_type }}"
      delegate_to: localhost
      run_once: true

    - name: Set new authorized keys
      vars:
        lookup_path: "{{ ssh_private_key_path }}_new.pub"
      ansible.posix.authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ lookup('file', lookup_path) }}"
      loop: "{{ rekey_users }}"
      become: true

    - name: Locally deprecate existing key (private)
      command: "mv {{ ssh_private_key_path }} {{ ssh_private_key_path }}_old"
      delegate_to: localhost
      run_once: true

    - name: Locally deprecate existing key (public)
      command: "mv {{ ssh_public_key_path }} {{ ssh_public_key_path }}_old"
      delegate_to: localhost
      run_once: true

    - name: Locally promote new key (private)
      command: "mv {{ ssh_private_key_path }}_new {{ ssh_private_key_path }}"
      delegate_to: localhost
      run_once: true

    - name: Locally promote new key (public)
      command: "mv {{ ssh_private_key_path }}_new.pub {{ ssh_public_key_path }}"
      delegate_to: localhost
      run_once: true

    - name: Remove old key from hosts
      vars:
        lookup_path: "{{ ssh_public_key_path }}_old"
      ansible.posix.authorized_key:
        user: "{{ item }}"
        state: absent
        key: "{{ lookup('file', lookup_path) }}"
      loop: "{{ rekey_users }}"
      become: true
      when: rekey_remove_existing_key
